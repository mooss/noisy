export const tips = {
    simplex: "Raw simplex noise, the fundamental terrain generation building block.\n\nCreates a landscape of smooth hills.",
    simplex_seed: "Seed for the simplex noise generator.\n\nChanging the seed results in completely different values, but with similar properties.",
    ridge: "Simplex noise with a post-processing step.\n\nCreates a sharper terrain reminescent of a mountain chain.",
    ridge_invert: "Inverts the height.\n\nMakes valleys appear as ridges and vice versa.",
    ridge_square: "Squares the height.\n\nGives a flatter appearance, with less dramatic peaks and hiding the folds.",
    layered_simplex: "Multiple values (called octaves) of simplex noise layered on top of each other.\nCreates a more complex hilly terrain than plain simplex noise, with each octave adding more details.",
    layered_ridge: "Multiple values (called octaves) of simplex noise layered on top of each other.\nCreates a more complex mountaineous terrain than plain ridge noise, with each octave adding more details.",
    layers_fundamental: "Base frequency for the first noise layer, controls the size of terrain features.\n\nLower values creates broader, smoother terrain.\nHigher values will bring everything close together, resulting sharper terrain with steeper slopes.",
    layers_octaves: "Number of noise layers.\n\nMore octaves will add details to the terrain.",
    layers_persistence: "Amount by which the height of each successive octave is decreased.\n\nHigher values makes every subsequent octave have a bigger impact, resulting in more bumpy terrain.",
    layers_lacunarity: "Multiplier for the frequency of each successive octave.\n\nHigher values makes every subsequent octave pack more details, resulting in sharper terrain with steeper slopes.",
    continental_mix: "Ridge noise and simplex noise combined together.\n\nCreates a montaineous terrain with the lower elevations made of smoother hills.\n\nThe mountains noise (ridge) is what dictates the general shape of the terrain.\nThe hill noise (simplex) influences the lower part of the terrain.\n\nHighly experimental, it's hard to understand the parameters behaviour, this is mostly to test the concept of using a 'selecting' noise.",
    continental_bass: "The lower, hilly part of the terrain.",
    continental_treble: "The higher, mountaineous part of the terrain.",
    continental_threshold: "Thresholds dictating which noise (mountain or hill) will be used to decide the height and how to mix them.",
    continental_low: "Low cutoff point.\n\nWhen the mountain height is below this threshold, only the hill height is taken into account.",
    continental_mid: "Controls the transition between mountains and hills when the mountain height is between the low and high thresholds.\n\nWhen lower, hill height has a bigger influence.\nWhen higher, mountain height has a bigger influence.",
    continental_high: "High cutoff point.\n\nWhen the mountain height is above this value, it fully decides the final height.",
    terracing: "Adds steps in the terrain, creating terraces.",
    terracing_constant: "Use the same amount of terraces everywhere.\n\nCreates a blocky terrain with evenly-spaced terrain.",
    terracing_steps: "Number of terraces used in the terrain.\n\nMore terraces will create a smoother terrain.",
    terracing_voxels: "Make the number of terraces proportional to the chunk resolution.\n\nCreates square blocks reminiscent of Minecraft.",
    terracing_noisy: "Use a different amount of terraces in different places.\n\nCreates a stepped and wobbly surface that increases in wobbleliness when the difference between the minimum and the maximum of terraces increases.",
    noisy_terrace_min: "Minimum number of terraces used in the terrain.\n\nMore terraces will create smoother terrain.",
    noisy_terrace_max: "Maximum number of terraces used in the terrain.\n\nMore terraces will create smoother terrain.",
    noisy_terracer: "Noise dictating how many terraces will be used at a given point, normalized between min and max.",
    warping: "Distorts the coordinates to hide straight lines in the terrain, introducing vortex-like perturbations.",
    warping_frequency: "Scale factor for the warping coordinates, dictating how dense the warping is.\n\nHigher values will make the warping effect repeat more frequently, making the effect more visible.",
    warping_strength: "How much the warping effect distorts the coordinates.\n\nHigher values will make the terrain more swirly, making the effect more visible.",
    warper: "Noise dictating the magnitude of the warping effect.",
    clustering: "Groups neighboring coordinates together to form chunks of uniform height.\n\nCreates shapes looking like continents, camouflage pattern or biomes.",
    clustering_coorscale: "Multiplier for the tile coordinates, dictates the tile density.\n\nHigher values will result in more tiles packed into a chunk.",
    clustering_enabled: "Toggles clustering on or off.",
    clustering_noisescale: "Magnitude of the distortion applied to each tile.\n\nHigher values will make the tiles less square and more chaotic.",
    tiling: "Transform the noise into a repeating texture.",
    tiling_none: "No tiling, use the noise as-is.",
    tiling_quad: "Interpolates between four points.\n\nCreates a seamless texture that somewhat preserves the noise pattern without mirroring.",
    tiling_sine: "Use the sine function to transform the coordinates.\n\nCreate a seamless mirrored texture with very obvious circular artifacts.",
    tilling_mirrored_fraction_x: "Force a repetition along the horizontal axis instead of infinite mirroring.",
    tilling_mirrored_fraction_y: "Force a repetition along the vertical axis instead of infinite mirroring.",
    tiling_mirrored: "Mirror the x and y coordinates.\n\nCreate a seamless mirrored texture.",
    height: "Algorithm generating the height of the terrain.",
    avatar_size: "Size of the red sphere.",
    avatar_offset: "Height at which the red sphere floats above the terrain.",
    camera_mode: "Behavior of the camera.",
    chunks: "Square sections of terrain loaded around the avatar.",
    chunk_load_radius: "Distance from the player at which chunks are loaded.",
    chunk_radius_type: "Shape of the chunk loading area around the avatar.",
    chunk_size: "Number of blocks in a chunk.\nIncreasing this increases the terrain resolution but makes the terrain slower to load.",
    light_ambient: "Ambient light intensity.",
    light_directional: "Directional light intensity.",
    render_geometry: "Fundamental shape the terrain is made of.",
    render_painter: "How the terrain will be rendered.",
    render_palette: "Color palette of the terrain.",
    height_multiplier: "Multiplier applied to the terrain height.\nSet to zero to display flat terrain.",
}
